@page "/projects"
@using PortfolioCMS.Models
@using PortfolioCMS.Services
@inject IProjectService ProjectService
@inject NavigationManager Nav
@inject IJSRuntime JS

<div class="container mt-4">
    <a href="/projects/create" class="btn btn-success mb-3">+ Add New Project</a>

    <h3>My Projects</h3>

    <InputText @bind-Value="keyword" placeholder="Search..." class="form-control mb-2" />

    <select @bind="sortOrder" class="form-select mb-3">
        <option value="">Sort by (default: newest)</option>
        <option value="title_asc">Title A-Z</option>
        <option value="title_desc">Title Z-A</option>
        <option value="date_asc">Oldest First</option>
        <option value="date_desc">Newest First</option>
    </select>

    <button class="btn btn-primary mb-3" @onclick="ApplyFilters">Apply</button>

    @if (projects == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!projects.Any())
    {
        <p>No projects found.</p>
    }
    else
    {
        @foreach (var project in projects)
        {

            <div class="card mb-3 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">@project.Title</h5>

                    @if (project.Images?.Any() == true)
                    {
                        <div class="d-flex flex-wrap gap-2 mb-2">
                            @foreach (var img in project.Images)
                            {
                                <img src="@("/" + img.Path)" class="img-thumbnail" style="max-height: 150px;" />
                            }
                        </div>
                    }

                    <div class="card-text">
                        @project.Description
                    </div>

                    <div class="mt-2 d-flex gap-2 flex-wrap">
                        <a href="@project.RepoLink" class="btn btn-outline-primary" target="_blank">View Repo</a>
                        <a href="/projects/view/@project.Id" class="btn btn-outline-primary">View Project</a>
                        <a href="/projects/edit/@project.Id" class="btn btn-warning btn-sm">Edit</a>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteProject(project.Id)">Delete</button>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<Project>? projects;
    private string? keyword;
    private string? sortOrder;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        projects = await ProjectService.GetFilteredProjectsAsync(keyword, sortOrder);
    }

    private async Task ApplyFilters()
    {
        await LoadProjects();
    }

    private async Task DeleteProject(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this project?");
        if (!confirm) return;

        await ProjectService.DeleteProjectAsync(id);
        await LoadProjects();
    }
}
